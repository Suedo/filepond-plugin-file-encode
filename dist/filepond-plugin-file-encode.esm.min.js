/*!
 * FilePondPluginFileEncode 2.1.2
 * Licensed under MIT, https://opensource.org/licenses/MIT/
 * Please visit https://pqina.nl/filepond/ for details.
 */

/* eslint-disable */

const e=function(){self.onmessage=(a=>{e(a.data.message,e=>{self.postMessage({id:a.data.id,message:e})})});const e=(e,a)=>{const{file:t}=e,i=new FileReader;i.onloadend=(()=>{a(i.result.replace("data:","").replace(/^.+,/,""))}),i.readAsDataURL(t)}},a=({addFilter:a,utils:t})=>{const{Type:i,createWorker:n,createRoute:d,isFile:o}=t,s=({name:a,file:t})=>new Promise(i=>{const d=n(e);d.post({file:t},e=>{i({name:a,data:e}),d.terminate()})}),l=[];return a("DID_CREATE_ITEM",e=>{e.extend("getFileEncodeBase64String",()=>l[e.id].data),e.extend("getFileEncodeDataURL",()=>`data:${e.fileType};base64,${l[e.id].data}`)}),a("SHOULD_PREPARE_OUTPUT",()=>new Promise(e=>{e(!0)})),a("COMPLETE_PREPARE_OUTPUT",(e,{item:a})=>new Promise(t=>{if(!o(e)&&!Array.isArray(e))return t(e);l[a.id]={metadata:a.getMetadata(),data:null},Promise.all((e instanceof Blob?[{name:null,file:e}]:e).map(s)).then(i=>{l[a.id].data=e instanceof Blob?i[0].data:i,t(e)})})),a("CREATE_VIEW",e=>{const{is:a,view:t,query:i}=e;a("file-wrapper")&&i("GET_ALLOW_FILE_ENCODE")&&t.registerWriter(d({DID_PREPARE_OUTPUT:({root:e,action:a})=>{if(i("IS_ASYNC"))return;const t=i("GET_ITEM",a.id);if(!t)return;const n=l[t.id],d=n.metadata,o=n.data;e.ref.data.value=JSON.stringify({id:t.id,name:t.file.name,type:t.file.type,size:t.file.size,metadata:d,data:o})},DID_REMOVE_ITEM:({action:e})=>{const a=i("GET_ITEM",e.id);a&&delete l[a.id]}}))}),{options:{allowFileEncode:[!0,i.BOOLEAN]}}};"undefined"!=typeof window&&void 0!==window.document&&document.dispatchEvent(new CustomEvent("FilePond:pluginloaded",{detail:a}));export default a;
